---
- name: Create user if it doesn't exists
  user: name={{ jeto_user }} home={{ jeto_home }} state=present shell=/bin/bash

- name: Create the vassals folder
  file: path="{{ jeto_home }}/vassals" state=directory owner={{ jeto_user }} group={{ jeto_user }} 

- name: Create the vassal
  template: src=vassal.ini.j2 dest={{ jeto_home}}/vassals/{{ jeto_application_name }}.ini owner={{ jeto_user }} group={{ jeto_user }} 

- name: Create the nginx site
  template: src=nginx-site.j2 dest=/etc/nginx/sites-available/{{ jeto_application_name }}

- name: Enable the nginx site
  file: src="/etc/nginx/sites-available/{{jeto_application_name}}" dest="/etc/nginx/sites-enabled/{{jeto_application_name}}" state=link
  notify: reload nginx

- name: Create upstart configuration
  template: src=upstart.conf.j2 dest=/etc/init/{{ jeto_application_name }}.conf

- name: Checks for permission
  file: path={{ jeto_install_dir }} owner={{ jeto_user }} group={{ jeto_user }} recurse=yes

- name: Create log folder and make sure permissions are right
  file: path=/var/log/{{ jeto_application_name }} owner={{ jeto_user }} group={{ jeto_user }} state=directory recurse=yes

- name: Installs the ubuntu required packages
  apt: pkg=python-mysqldb state=installed

- name: Installs jeto python requirements
  pip: requirements={{ jeto_install_dir}}/requirements.txt

- name: Setup the initial config
  template: src=settings_dev.py.j2 dest={{ jeto_install_dir }}/jeto/settings_dev.py owner={{ jeto_user }} group={{ jeto_user }} 

- name: Installs mysql
  apt: pkg=mysql-server state=installed

- name: Creates the database
  mysql_db: name=jeto state=present
- mysql_user: name=jeto password=jeto priv=jeto.*:ALL state=present

- name: Setup the initial DB
  shell: python manage.py db upgrade chdir="{{ jeto_install_dir }}/"
  sudo_user: "{{ jeto_user }}"
  when: jeto_db is not defined

- name: Set fact initial DB
  set_fact: jeto_db=1

- name: Start the service jeto
  service: name={{ jeto_application_name }} state=restarted

- name: Make sure the permission are right on the debug.log
  file: path="/var/log/{{ jeto_application_name }}/debug.log" owner={{ jeto_user }} group={{ jeto_user }} state=file

- name: Ensure dummy site not there
  file: dest=/etc/nginx/sites-enabled/dummy state=absent
  notify: reload nginx
