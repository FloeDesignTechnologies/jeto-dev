---
- name: Create user if it doesn't exists
  user: name={{ vagrant_control_user }} home={{ vagrant_control_home }} state=present

- name: Create the vassals folder
  file: path="{{ vagrant_control_home }}/vassals" state=directory owner={{ vagrant_control_user }} group={{ vagrant_control_user }} 

- name: Create the vassal
  template: src=vassal.ini.j2 dest={{ vagrant_control_home}}/vassals/{{ vagrant_control_application_name }}.ini owner={{ vagrant_control_user }} group={{ vagrant_control_user }} 

- name: Create the nginx site
  template: src=nginx-site.j2 dest=/etc/nginx/sites-available/{{ vagrant_control_application_name }}

- name: Enable the nginx site
  file: src=/etc/nginx/sites-available/{{ vagrant_control_application_name }} dest=/etc/nginx/sites-enabled/{{ vagrant_control_application_name }} state=link
  notify: reload nginx

- name: Create upstart configuration
  template: src=upstart.conf.j2 dest=/etc/init/{{ vagrant_control_application_name }}.conf

- name: Checks for permission
  file: path={{ vagrant_control_home }}/{{ vagrant_control_application_name }} owner={{ vagrant_control_user }} group={{ vagrant_control_user }} recurse=yes

- name: Create log folder
  file: path=/var/log/{{ vagrant_control_application_name }} owner={{ vagrant_control_user }} group={{ vagrant_control_user }} state=directory

- name: Installs vagrant-control python requirements
  pip: requirements={{ vagrant_control_home }}/{{ vagrant_control_application_name }}/requirements.txt

- name: Setup the initial config
  template: src=settings_dev.py.j2 dest={{ vagrant_control_home}}/{{ vagrant_control_application_name }}/vagrantControl/settings_dev.py owner={{ vagrant_control_user }} group={{ vagrant_control_user }} 

- name: Setup the initial DB
  shell: python {{ vagrant_control_home }}/{{ vagrant_control_application_name }}/initdb.py
  when: vagrant_db is not defined

- name: Set fact initial DB
  set_fact: vagrant_db=1

- name: Start the service vagrant-control
  service: name={{ vagrant_control_application_name }} state=restarted

